import type { Metadata } from "next";
import "./globals.css";
import { NextIntlClientProvider } from "next-intl";
import { getMessages } from "next-intl/server";
import { notFound } from "next/navigation";
import { routing } from "@/i18n/routing";
import localFont from "next/font/local";
import { Toaster } from "../components/ui/sonner";
const cairo = localFont({
  src: "../fonts/Cairo-VF.ttf",
  variable: "--font-cairo",
  weight: "100 200 300 400 500 600 700 800 900",
});
const roboto = localFont({
  src: "../fonts/Roboto-VF.ttf",
  variable: "--font-roboto",
  weight: "100 200 300 400 500 600 700 800 900",
});
export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};
import type { ReactNode } from "react";
import { ThemeProvider } from "next-themes";
import { SessionProvider } from "next-auth/react";
import { auth } from "@/auth";
import { ReduxProvider } from "./Provider";

interface Params {
  locale: string;
}

export default async function RootLayout({
  children,
  params,
}: {
  children: ReactNode;
  params: Promise<Params>;
}) {
  const resolvedParams = await params;
  const locale = resolvedParams.locale as "ar" | "en";
  // -- diraction --
  const dir = locale === "ar" ? "rtl" : "ltr";
  if (!routing.locales.includes(locale)) {
    notFound();
  }

  const messages = await getMessages();
  const session = await auth();
  return (
    <html lang={locale} dir={dir} suppressHydrationWarning>
      <SessionProvider session={session}>
        <body
          className={`  ${locale == "ar" ? "font-cairo" : "font-roboto"} ${
            cairo.variable
          } ${
            roboto.variable
          } bg-background-light dark:bg-background-dark text-text-light dark:text-text-dark`}
        >
          <ReduxProvider >
            <ThemeProvider
              attribute="class"
              defaultTheme="system"
              enableSystem
              disableTransitionOnChange
            >
              <NextIntlClientProvider messages={messages}>
                {children}
                <Toaster position="top-center" />
              </NextIntlClientProvider>
            </ThemeProvider>
          </ReduxProvider>
        </body>
      </SessionProvider>
    </html>
  );
}
