import type { Metadata } from "next";
import "./globals.css";
import { NextIntlClientProvider } from "next-intl";
import { getMessages } from "next-intl/server";
import { notFound } from "next/navigation";
import { routing } from "@/i18n/routing";
import localFont from "next/font/local";
const cairo = localFont({
  src: "../fonts/Cairo-VF.ttf",
  variable: "--font-cairo",
  weight: "100 200 300 400 500 600 700 800 900",
});
const roboto = localFont({
  src: "../fonts/Roboto-VF.ttf",
  variable: "--font-roboto",
  weight: "100 200 300 400 500 600 700 800 900",
});
export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

import type { ReactNode } from "react";
import { ThemeProvider } from "next-themes";
import Nav from "../components/navigation/Nav";
import SideBar from "../components/SideBar";
interface Params {
  locale: string;
}

export default async function RootLayout({
  children,
  params,
}: {
  children: ReactNode;
  params: Promise<Params>;
}) {
  const resolvedParams = await params;
  const locale = resolvedParams.locale;
  // -- diraction --
  const dir = locale === "ar" ? "rtl" : "ltr";
  if (!routing.locales.includes(locale as any)) {
    notFound();
  }

  const messages = await getMessages();

  return (
    <html lang={locale} dir={dir} suppressHydrationWarning>
      <body
        className={`  ${
          locale == "ar" ? "font-cairo" : "font-roboto"
        } ${cairo.variable} ${
          roboto.variable
        } bg-background-light dark:bg-background-dark text-text-light dark:text-text-dark`}
      >
        <ThemeProvider
          attribute="class"
          defaultTheme="system"
          enableSystem
          disableTransitionOnChange
        >
          <NextIntlClientProvider messages={messages}>
            {/* Header */}
            <Nav />

            {/* Main Layout */}

            {/* Main Content */}
            <main className="  mx-auto  h-[calc(100vh-68px)] gap-2 max-md:flex max-md:flex-col max-md:overflow-hidden relative">
              <SideBar />
              <div className="h-[calc(100vh-68px)] overflow-y-auto py-4">{children}</div>
            </main>
          </NextIntlClientProvider>
        </ThemeProvider>
      </body>
    </html>
  );
}
